find_all_headers_and_sources()
add_library(liveMedia ${BUILD_LIB_TYPE}
    ${_private_headers}
    AC3AudioFileServerMediaSubsession.cpp
    AC3AudioRTPSource.cpp
    AC3AudioStreamFramer.cpp
    ADTSAudioFileServerMediaSubsession.cpp
    ADTSAudioFileSource.cpp
    AMRAudioFileServerMediaSubsession.cpp
    AMRAudioFileSource.cpp
    AMRAudioRTPSource.cpp
    AMRAudioSource.cpp
    AudioInputDevice.cpp
    Base64.cpp
    BasicUDPSource.cpp
    BitVector.cpp
    ByteStreamFileSource.cpp
    ByteStreamMemoryBufferSource.cpp
    ByteStreamMultiFileSource.cpp
    DVVideoFileServerMediaSubsession.cpp
    DVVideoRTPSource.cpp
    DVVideoStreamFramer.cpp
    DeviceSource.cpp
    DigestAuthentication.cpp
    EBMLNumber.cpp
    FileServerMediaSubsession.cpp
    FramedFileSource.cpp
    FramedFilter.cpp
    FramedSource.cpp
    GenericMediaServer.cpp
    H261VideoRTPSource.cpp
    H263plusVideoFileServerMediaSubsession.cpp
    H263plusVideoRTPSource.cpp
    H263plusVideoStreamFramer.cpp
    H263plusVideoStreamParser.cpp
    H264VideoFileServerMediaSubsession.cpp
    H264VideoRTPSource.cpp
    H264VideoStreamDiscreteFramer.cpp
    H264VideoStreamFramer.cpp
    H264or5VideoStreamDiscreteFramer.cpp
    H264or5VideoStreamFramer.cpp
    H265VideoFileServerMediaSubsession.cpp
    H265VideoRTPSource.cpp
    H265VideoStreamDiscreteFramer.cpp
    H265VideoStreamFramer.cpp
    InputFile.cpp
    JPEGVideoRTPSource.cpp
    JPEGVideoSource.cpp
    Locale.cpp
    MediaSink.cpp
    MP3ADU.cpp
    MP3ADURTPSource.cpp
    MP3ADUTranscoder.cpp
    MP3ADUdescriptor.cpp
    MP3ADUinterleaving.cpp
    MP3AudioFileServerMediaSubsession.cpp
    MP3AudioMatroskaFileServerMediaSubsession.cpp
    MP3FileSource.cpp
    MP3Internals.cpp
    MP3InternalsHuffman.cpp
    MP3InternalsHuffmanTable.cpp
    MP3StreamState.cpp
    MP3Transcoder.cpp
    MPEG1or2AudioRTPSink.cpp
    MPEG1or2AudioRTPSource.cpp
    MPEG1or2AudioStreamFramer.cpp
    MPEG1or2Demux.cpp
    MPEG1or2DemuxedElementaryStream.cpp
    MPEG1or2DemuxedServerMediaSubsession.cpp
    MPEG1or2FileServerDemux.cpp
    MPEG1or2VideoFileServerMediaSubsession.cpp
    MPEG1or2VideoRTPSink.cpp
    MPEG1or2VideoRTPSource.cpp
    MPEG1or2VideoStreamDiscreteFramer.cpp
    MPEG1or2VideoStreamFramer.cpp
    MPEG2IndexFromTransportStream.cpp
    MPEG2TransportFileServerMediaSubsession.cpp
    MPEG2TransportStreamAccumulator.cpp
    MPEG2TransportStreamFramer.cpp
    MPEG2TransportStreamFromESSource.cpp
    MPEG2TransportStreamFromPESSource.cpp
    MPEG2TransportStreamIndexFile.cpp
    MPEG2TransportStreamMultiplexor.cpp
    MPEG2TransportStreamTrickModeFilter.cpp
    MPEG2TransportUDPServerMediaSubsession.cpp
    MPEG4ESVideoRTPSink.cpp
    MPEG4ESVideoRTPSource.cpp
    MPEG4GenericRTPSink.cpp
    MPEG4GenericRTPSource.cpp
    MPEG4LATMAudioRTPSink.cpp
    MPEG4LATMAudioRTPSource.cpp
    MPEG4VideoFileServerMediaSubsession.cpp
    MPEG4VideoStreamDiscreteFramer.cpp
    MPEG4VideoStreamFramer.cpp
    MPEGVideoStreamFramer.cpp
    MPEGVideoStreamParser.cpp
    MatroskaDemuxedTrack.cpp
    MatroskaFile.cpp
    MatroskaFileParser.cpp
    MatroskaFileServerDemux.cpp
    MatroskaFileServerMediaSubsession.cpp
    Media.cpp
    MediaSession.cpp
    MediaSource.cpp
    MultiFramedRTPSource.cpp
    OggDemuxedTrack.cpp
    OggFile.cpp
    OggFileParser.cpp
    OggFileServerDemux.cpp
    OggFileServerMediaSubsession.cpp
    OutputFile.cpp
    PassiveServerMediaSubsession.cpp
    ProxyServerMediaSession.cpp
    QCELPAudioRTPSource.cpp
    QuickTimeGenericRTPSource.cpp
    RTCP.cpp
    RTPInterface.cpp
    RTPReceptionStats.cpp
    RTPSource.cpp
    RTPSink.cpp
    RTSPClient.cpp
    RTSPCommon.cpp
    RawVideoRTPSource.cpp
    SIPClient.cpp
    ServerMediaSession.cpp
    SimpleRTPSource.cpp
    StreamParser.cpp
    StreamReplicator.cpp
    TheoraVideoRTPSource.cpp
    VP8VideoRTPSource.cpp
    VP9VideoRTPSource.cpp
    VorbisAudioRTPSource.cpp
    WAVAudioFileServerMediaSubsession.cpp
    WAVAudioFileSource.cpp
    ourMD5.cpp
    uLawAudioFilter.cpp
    rtcp_from_spec.c
)
add_library(Live555::liveMedia ALIAS liveMedia)
target_include_directories(liveMedia
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)
target_link_libraries(liveMedia PUBLIC
    live555_cxx_flags
    groupsock
)

live555_target_version(liveMedia AUTO)
set_target_properties(liveMedia PROPERTIES FOLDER "Live555/lib")

install_target(liveMedia "${_public_headers}")
